//https://github.com/klimas7/Grooy-script

println(Jenkins.instance.pluginManager.plugins)

//-------------------------------------

import jenkins.*
import jenkins.model.*
import hudson.*
import hudson.model.*

jenkins = Jenkins.getInstance()
nodeProperties = jenkins.getGlobalNodeProperties()
props = nodeProperties.getAll(hudson.slaves.EnvironmentVariablesNodeProperty.class)

for (prop in props) {
    prop.getEnvVars().each{ println "${it}"; }
}

//Slave

slaves = Jenkins.getInstance().slaves
for (slave in slaves) {
    props = slave.nodeProperties.getAll(hudson.slaves.EnvironmentVariablesNodeProperty.class)
    println slave.name
    for (prop in props) {
        prop.getEnvVars().each{ println "${it}"; }
    }
}


println "OK";

//--------------------------------------
println 'http://www.google.com'.toURL().text

//--------------------------------------

import jenkins.*
import jenkins.model.*
import hudson.*
import hudson.model.*

def addVariable(String key, String value, Map envVars){
    String oldValue = envVars.get(key);
    if (oldValue != null) {
        println "Global variable exists: " + key + " -> " + oldValue + " Update this!";
    }
    envVars.put(key, value)
    println "Add/Update global variable: " + key + " -> " + value;
}

jenkins = Jenkins.getInstance()
nodeProperties = jenkins.getGlobalNodeProperties()
props = nodeProperties.getAll(hudson.slaves.EnvironmentVariablesNodeProperty.class)


if ( props.size() != 1 ) {
    println("error: unexpected number of environment variable containers: " + nodes.size() + " expected: 1")
} else {
    envVars = props.get(0).getEnvVars();

    addVariable("TEST_SCRIPT", "Test_script", envVars)

    jenkins.save();
}


println "OK";

//------------------------------------

jenkins = Jenkins.getInstance()
def jobs = jenkins.getItems(hudson.model.FreeStyleProject.class) //hudson.maven.MavenModuleSet.class

jobs.findAll{ !it.logRotator}.each {
    println it.name;
}

return "OK"

//------------------------------
import hudson.tasks.*

jenkins = Jenkins.getInstance()
def jobs = jenkins.getItems(hudson.model.FreeStyleProject.class) //hudson.maven.MavenModuleSet.class


jobs.findAll{ !it.buildDiscarder}.each {
    println it.name;
    println it.setBuildDiscarder(new LogRotator(-1, 20, -1, -1) )
    it.save()
}

return "OK"
